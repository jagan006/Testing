//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SHS.DataSets.DataSetCustomIServiceNote {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetCustomIServiceNote")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetCustomIServiceNote : global::System.Data.DataSet {
        
        private CustomDocumentIndividualServiceNotesDataTable tableCustomDocumentIndividualServiceNotes;
        
        private CustomIndividualServiceNoteGoalsDataTable tableCustomIndividualServiceNoteGoals;
        
        private CustomIndividualServiceNoteObjectivesDataTable tableCustomIndividualServiceNoteObjectives;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetCustomIServiceNote() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetCustomIServiceNote(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CustomDocumentIndividualServiceNotes"] != null)) {
                    base.Tables.Add(new CustomDocumentIndividualServiceNotesDataTable(ds.Tables["CustomDocumentIndividualServiceNotes"]));
                }
                if ((ds.Tables["CustomIndividualServiceNoteGoals"] != null)) {
                    base.Tables.Add(new CustomIndividualServiceNoteGoalsDataTable(ds.Tables["CustomIndividualServiceNoteGoals"]));
                }
                if ((ds.Tables["CustomIndividualServiceNoteObjectives"] != null)) {
                    base.Tables.Add(new CustomIndividualServiceNoteObjectivesDataTable(ds.Tables["CustomIndividualServiceNoteObjectives"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDocumentIndividualServiceNotesDataTable CustomDocumentIndividualServiceNotes {
            get {
                return this.tableCustomDocumentIndividualServiceNotes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomIndividualServiceNoteGoalsDataTable CustomIndividualServiceNoteGoals {
            get {
                return this.tableCustomIndividualServiceNoteGoals;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomIndividualServiceNoteObjectivesDataTable CustomIndividualServiceNoteObjectives {
            get {
                return this.tableCustomIndividualServiceNoteObjectives;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetCustomIServiceNote cln = ((DataSetCustomIServiceNote)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CustomDocumentIndividualServiceNotes"] != null)) {
                    base.Tables.Add(new CustomDocumentIndividualServiceNotesDataTable(ds.Tables["CustomDocumentIndividualServiceNotes"]));
                }
                if ((ds.Tables["CustomIndividualServiceNoteGoals"] != null)) {
                    base.Tables.Add(new CustomIndividualServiceNoteGoalsDataTable(ds.Tables["CustomIndividualServiceNoteGoals"]));
                }
                if ((ds.Tables["CustomIndividualServiceNoteObjectives"] != null)) {
                    base.Tables.Add(new CustomIndividualServiceNoteObjectivesDataTable(ds.Tables["CustomIndividualServiceNoteObjectives"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCustomDocumentIndividualServiceNotes = ((CustomDocumentIndividualServiceNotesDataTable)(base.Tables["CustomDocumentIndividualServiceNotes"]));
            if ((initTable == true)) {
                if ((this.tableCustomDocumentIndividualServiceNotes != null)) {
                    this.tableCustomDocumentIndividualServiceNotes.InitVars();
                }
            }
            this.tableCustomIndividualServiceNoteGoals = ((CustomIndividualServiceNoteGoalsDataTable)(base.Tables["CustomIndividualServiceNoteGoals"]));
            if ((initTable == true)) {
                if ((this.tableCustomIndividualServiceNoteGoals != null)) {
                    this.tableCustomIndividualServiceNoteGoals.InitVars();
                }
            }
            this.tableCustomIndividualServiceNoteObjectives = ((CustomIndividualServiceNoteObjectivesDataTable)(base.Tables["CustomIndividualServiceNoteObjectives"]));
            if ((initTable == true)) {
                if ((this.tableCustomIndividualServiceNoteObjectives != null)) {
                    this.tableCustomIndividualServiceNoteObjectives.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetCustomIServiceNote";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetCustomIServiceNote.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCustomDocumentIndividualServiceNotes = new CustomDocumentIndividualServiceNotesDataTable();
            base.Tables.Add(this.tableCustomDocumentIndividualServiceNotes);
            this.tableCustomIndividualServiceNoteGoals = new CustomIndividualServiceNoteGoalsDataTable();
            base.Tables.Add(this.tableCustomIndividualServiceNoteGoals);
            this.tableCustomIndividualServiceNoteObjectives = new CustomIndividualServiceNoteObjectivesDataTable();
            base.Tables.Add(this.tableCustomIndividualServiceNoteObjectives);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDocumentIndividualServiceNotes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomIndividualServiceNoteGoals() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomIndividualServiceNoteObjectives() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetCustomIServiceNote ds = new DataSetCustomIServiceNote();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CustomDocumentIndividualServiceNotesRowChangeEventHandler(object sender, CustomDocumentIndividualServiceNotesRowChangeEvent e);
        
        public delegate void CustomIndividualServiceNoteGoalsRowChangeEventHandler(object sender, CustomIndividualServiceNoteGoalsRowChangeEvent e);
        
        public delegate void CustomIndividualServiceNoteObjectivesRowChangeEventHandler(object sender, CustomIndividualServiceNoteObjectivesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDocumentIndividualServiceNotesDataTable : global::System.Data.TypedTableBase<CustomDocumentIndividualServiceNotesRow> {
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnShowSelectedItems;
            
            private global::System.Data.DataColumn columnGoalsOutcomesStrategies;
            
            private global::System.Data.DataColumn columnNameOfService;
            
            private global::System.Data.DataColumn columnServiceEvent;
            
            private global::System.Data.DataColumn columnPertinentEvent;
            
            private global::System.Data.DataColumn columnProgress;
            
            private global::System.Data.DataColumn columnLackOfProgress;
            
            private global::System.Data.DataColumn columnProgressComments;
            
            private global::System.Data.DataColumn columnFollowUpNeeded;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentIndividualServiceNotesDataTable() {
                this.TableName = "CustomDocumentIndividualServiceNotes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentIndividualServiceNotesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDocumentIndividualServiceNotesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShowSelectedItemsColumn {
                get {
                    return this.columnShowSelectedItems;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoalsOutcomesStrategiesColumn {
                get {
                    return this.columnGoalsOutcomesStrategies;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameOfServiceColumn {
                get {
                    return this.columnNameOfService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceEventColumn {
                get {
                    return this.columnServiceEvent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PertinentEventColumn {
                get {
                    return this.columnPertinentEvent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProgressColumn {
                get {
                    return this.columnProgress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LackOfProgressColumn {
                get {
                    return this.columnLackOfProgress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProgressCommentsColumn {
                get {
                    return this.columnProgressComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FollowUpNeededColumn {
                get {
                    return this.columnFollowUpNeeded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentIndividualServiceNotesRow this[int index] {
                get {
                    return ((CustomDocumentIndividualServiceNotesRow)(this.Rows[index]));
                }
            }
            
            public event CustomDocumentIndividualServiceNotesRowChangeEventHandler CustomDocumentIndividualServiceNotesRowChanging;
            
            public event CustomDocumentIndividualServiceNotesRowChangeEventHandler CustomDocumentIndividualServiceNotesRowChanged;
            
            public event CustomDocumentIndividualServiceNotesRowChangeEventHandler CustomDocumentIndividualServiceNotesRowDeleting;
            
            public event CustomDocumentIndividualServiceNotesRowChangeEventHandler CustomDocumentIndividualServiceNotesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDocumentIndividualServiceNotesRow(CustomDocumentIndividualServiceNotesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentIndividualServiceNotesRow AddCustomDocumentIndividualServiceNotesRow(
                        int DocumentVersionId, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        string DeletedBy, 
                        System.DateTime DeletedDate, 
                        string ShowSelectedItems, 
                        string GoalsOutcomesStrategies, 
                        string NameOfService, 
                        string ServiceEvent, 
                        string PertinentEvent, 
                        string Progress, 
                        string LackOfProgress, 
                        string ProgressComments, 
                        string FollowUpNeeded) {
                CustomDocumentIndividualServiceNotesRow rowCustomDocumentIndividualServiceNotesRow = ((CustomDocumentIndividualServiceNotesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentVersionId,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        ShowSelectedItems,
                        GoalsOutcomesStrategies,
                        NameOfService,
                        ServiceEvent,
                        PertinentEvent,
                        Progress,
                        LackOfProgress,
                        ProgressComments,
                        FollowUpNeeded};
                rowCustomDocumentIndividualServiceNotesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDocumentIndividualServiceNotesRow);
                return rowCustomDocumentIndividualServiceNotesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentIndividualServiceNotesRow FindByDocumentVersionId(int DocumentVersionId) {
                return ((CustomDocumentIndividualServiceNotesRow)(this.Rows.Find(new object[] {
                            DocumentVersionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDocumentIndividualServiceNotesDataTable cln = ((CustomDocumentIndividualServiceNotesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDocumentIndividualServiceNotesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnShowSelectedItems = base.Columns["ShowSelectedItems"];
                this.columnGoalsOutcomesStrategies = base.Columns["GoalsOutcomesStrategies"];
                this.columnNameOfService = base.Columns["NameOfService"];
                this.columnServiceEvent = base.Columns["ServiceEvent"];
                this.columnPertinentEvent = base.Columns["PertinentEvent"];
                this.columnProgress = base.Columns["Progress"];
                this.columnLackOfProgress = base.Columns["LackOfProgress"];
                this.columnProgressComments = base.Columns["ProgressComments"];
                this.columnFollowUpNeeded = base.Columns["FollowUpNeeded"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnShowSelectedItems = new global::System.Data.DataColumn("ShowSelectedItems", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowSelectedItems);
                this.columnGoalsOutcomesStrategies = new global::System.Data.DataColumn("GoalsOutcomesStrategies", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoalsOutcomesStrategies);
                this.columnNameOfService = new global::System.Data.DataColumn("NameOfService", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameOfService);
                this.columnServiceEvent = new global::System.Data.DataColumn("ServiceEvent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceEvent);
                this.columnPertinentEvent = new global::System.Data.DataColumn("PertinentEvent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPertinentEvent);
                this.columnProgress = new global::System.Data.DataColumn("Progress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgress);
                this.columnLackOfProgress = new global::System.Data.DataColumn("LackOfProgress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLackOfProgress);
                this.columnProgressComments = new global::System.Data.DataColumn("ProgressComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgressComments);
                this.columnFollowUpNeeded = new global::System.Data.DataColumn("FollowUpNeeded", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFollowUpNeeded);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentVersionId}, true));
                this.columnDocumentVersionId.AllowDBNull = false;
                this.columnDocumentVersionId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnShowSelectedItems.MaxLength = 1;
                this.columnGoalsOutcomesStrategies.MaxLength = 2147483647;
                this.columnNameOfService.MaxLength = 2147483647;
                this.columnServiceEvent.MaxLength = 2147483647;
                this.columnPertinentEvent.MaxLength = 2147483647;
                this.columnProgress.MaxLength = 1;
                this.columnLackOfProgress.MaxLength = 1;
                this.columnProgressComments.MaxLength = 2147483647;
                this.columnFollowUpNeeded.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentIndividualServiceNotesRow NewCustomDocumentIndividualServiceNotesRow() {
                return ((CustomDocumentIndividualServiceNotesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDocumentIndividualServiceNotesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDocumentIndividualServiceNotesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDocumentIndividualServiceNotesRowChanged != null)) {
                    this.CustomDocumentIndividualServiceNotesRowChanged(this, new CustomDocumentIndividualServiceNotesRowChangeEvent(((CustomDocumentIndividualServiceNotesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDocumentIndividualServiceNotesRowChanging != null)) {
                    this.CustomDocumentIndividualServiceNotesRowChanging(this, new CustomDocumentIndividualServiceNotesRowChangeEvent(((CustomDocumentIndividualServiceNotesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDocumentIndividualServiceNotesRowDeleted != null)) {
                    this.CustomDocumentIndividualServiceNotesRowDeleted(this, new CustomDocumentIndividualServiceNotesRowChangeEvent(((CustomDocumentIndividualServiceNotesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDocumentIndividualServiceNotesRowDeleting != null)) {
                    this.CustomDocumentIndividualServiceNotesRowDeleting(this, new CustomDocumentIndividualServiceNotesRowChangeEvent(((CustomDocumentIndividualServiceNotesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDocumentIndividualServiceNotesRow(CustomDocumentIndividualServiceNotesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCustomIServiceNote ds = new DataSetCustomIServiceNote();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDocumentIndividualServiceNotesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomIndividualServiceNoteGoalsDataTable : global::System.Data.TypedTableBase<CustomIndividualServiceNoteGoalsRow> {
            
            private global::System.Data.DataColumn columnIndividualServiceNoteGoalId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnGoalId;
            
            private global::System.Data.DataColumn columnGoalNumber;
            
            private global::System.Data.DataColumn columnGoalText;
            
            private global::System.Data.DataColumn columnCustomGoalActive;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteGoalsDataTable() {
                this.TableName = "CustomIndividualServiceNoteGoals";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomIndividualServiceNoteGoalsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomIndividualServiceNoteGoalsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndividualServiceNoteGoalIdColumn {
                get {
                    return this.columnIndividualServiceNoteGoalId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoalIdColumn {
                get {
                    return this.columnGoalId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoalNumberColumn {
                get {
                    return this.columnGoalNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoalTextColumn {
                get {
                    return this.columnGoalText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomGoalActiveColumn {
                get {
                    return this.columnCustomGoalActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteGoalsRow this[int index] {
                get {
                    return ((CustomIndividualServiceNoteGoalsRow)(this.Rows[index]));
                }
            }
            
            public event CustomIndividualServiceNoteGoalsRowChangeEventHandler CustomIndividualServiceNoteGoalsRowChanging;
            
            public event CustomIndividualServiceNoteGoalsRowChangeEventHandler CustomIndividualServiceNoteGoalsRowChanged;
            
            public event CustomIndividualServiceNoteGoalsRowChangeEventHandler CustomIndividualServiceNoteGoalsRowDeleting;
            
            public event CustomIndividualServiceNoteGoalsRowChangeEventHandler CustomIndividualServiceNoteGoalsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomIndividualServiceNoteGoalsRow(CustomIndividualServiceNoteGoalsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteGoalsRow AddCustomIndividualServiceNoteGoalsRow(string CreatedBy, System.DateTime CreatedDate, string ModifiedBy, System.DateTime ModifiedDate, string RecordDeleted, string DeletedBy, System.DateTime DeletedDate, int DocumentVersionId, int GoalId, decimal GoalNumber, string GoalText, string CustomGoalActive) {
                CustomIndividualServiceNoteGoalsRow rowCustomIndividualServiceNoteGoalsRow = ((CustomIndividualServiceNoteGoalsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        DocumentVersionId,
                        GoalId,
                        GoalNumber,
                        GoalText,
                        CustomGoalActive};
                rowCustomIndividualServiceNoteGoalsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomIndividualServiceNoteGoalsRow);
                return rowCustomIndividualServiceNoteGoalsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteGoalsRow FindByIndividualServiceNoteGoalId(int IndividualServiceNoteGoalId) {
                return ((CustomIndividualServiceNoteGoalsRow)(this.Rows.Find(new object[] {
                            IndividualServiceNoteGoalId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomIndividualServiceNoteGoalsDataTable cln = ((CustomIndividualServiceNoteGoalsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomIndividualServiceNoteGoalsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndividualServiceNoteGoalId = base.Columns["IndividualServiceNoteGoalId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnGoalId = base.Columns["GoalId"];
                this.columnGoalNumber = base.Columns["GoalNumber"];
                this.columnGoalText = base.Columns["GoalText"];
                this.columnCustomGoalActive = base.Columns["CustomGoalActive"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndividualServiceNoteGoalId = new global::System.Data.DataColumn("IndividualServiceNoteGoalId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndividualServiceNoteGoalId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnGoalId = new global::System.Data.DataColumn("GoalId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoalId);
                this.columnGoalNumber = new global::System.Data.DataColumn("GoalNumber", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoalNumber);
                this.columnGoalText = new global::System.Data.DataColumn("GoalText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoalText);
                this.columnCustomGoalActive = new global::System.Data.DataColumn("CustomGoalActive", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomGoalActive);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIndividualServiceNoteGoalId}, true));
                this.columnIndividualServiceNoteGoalId.AutoIncrement = true;
                this.columnIndividualServiceNoteGoalId.AutoIncrementSeed = -1;
                this.columnIndividualServiceNoteGoalId.AutoIncrementStep = -1;
                this.columnIndividualServiceNoteGoalId.AllowDBNull = false;
                this.columnIndividualServiceNoteGoalId.ReadOnly = true;
                this.columnIndividualServiceNoteGoalId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnGoalText.MaxLength = 2147483647;
                this.columnCustomGoalActive.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteGoalsRow NewCustomIndividualServiceNoteGoalsRow() {
                return ((CustomIndividualServiceNoteGoalsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomIndividualServiceNoteGoalsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomIndividualServiceNoteGoalsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomIndividualServiceNoteGoalsRowChanged != null)) {
                    this.CustomIndividualServiceNoteGoalsRowChanged(this, new CustomIndividualServiceNoteGoalsRowChangeEvent(((CustomIndividualServiceNoteGoalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomIndividualServiceNoteGoalsRowChanging != null)) {
                    this.CustomIndividualServiceNoteGoalsRowChanging(this, new CustomIndividualServiceNoteGoalsRowChangeEvent(((CustomIndividualServiceNoteGoalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomIndividualServiceNoteGoalsRowDeleted != null)) {
                    this.CustomIndividualServiceNoteGoalsRowDeleted(this, new CustomIndividualServiceNoteGoalsRowChangeEvent(((CustomIndividualServiceNoteGoalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomIndividualServiceNoteGoalsRowDeleting != null)) {
                    this.CustomIndividualServiceNoteGoalsRowDeleting(this, new CustomIndividualServiceNoteGoalsRowChangeEvent(((CustomIndividualServiceNoteGoalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomIndividualServiceNoteGoalsRow(CustomIndividualServiceNoteGoalsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCustomIServiceNote ds = new DataSetCustomIServiceNote();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomIndividualServiceNoteGoalsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomIndividualServiceNoteObjectivesDataTable : global::System.Data.TypedTableBase<CustomIndividualServiceNoteObjectivesRow> {
            
            private global::System.Data.DataColumn columnIndividualServiceNoteObjectiveId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnGoalId;
            
            private global::System.Data.DataColumn columnObjectiveNumber;
            
            private global::System.Data.DataColumn columnCustomObjectiveActive;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnObjectiveText;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteObjectivesDataTable() {
                this.TableName = "CustomIndividualServiceNoteObjectives";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomIndividualServiceNoteObjectivesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomIndividualServiceNoteObjectivesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndividualServiceNoteObjectiveIdColumn {
                get {
                    return this.columnIndividualServiceNoteObjectiveId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoalIdColumn {
                get {
                    return this.columnGoalId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectiveNumberColumn {
                get {
                    return this.columnObjectiveNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomObjectiveActiveColumn {
                get {
                    return this.columnCustomObjectiveActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectiveTextColumn {
                get {
                    return this.columnObjectiveText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteObjectivesRow this[int index] {
                get {
                    return ((CustomIndividualServiceNoteObjectivesRow)(this.Rows[index]));
                }
            }
            
            public event CustomIndividualServiceNoteObjectivesRowChangeEventHandler CustomIndividualServiceNoteObjectivesRowChanging;
            
            public event CustomIndividualServiceNoteObjectivesRowChangeEventHandler CustomIndividualServiceNoteObjectivesRowChanged;
            
            public event CustomIndividualServiceNoteObjectivesRowChangeEventHandler CustomIndividualServiceNoteObjectivesRowDeleting;
            
            public event CustomIndividualServiceNoteObjectivesRowChangeEventHandler CustomIndividualServiceNoteObjectivesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomIndividualServiceNoteObjectivesRow(CustomIndividualServiceNoteObjectivesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteObjectivesRow AddCustomIndividualServiceNoteObjectivesRow(string CreatedBy, System.DateTime CreatedDate, string ModifiedBy, System.DateTime ModifiedDate, string RecordDeleted, string DeletedBy, System.DateTime DeletedDate, int DocumentVersionId, int GoalId, decimal ObjectiveNumber, string CustomObjectiveActive, int Status, string ObjectiveText) {
                CustomIndividualServiceNoteObjectivesRow rowCustomIndividualServiceNoteObjectivesRow = ((CustomIndividualServiceNoteObjectivesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        DocumentVersionId,
                        GoalId,
                        ObjectiveNumber,
                        CustomObjectiveActive,
                        Status,
                        ObjectiveText};
                rowCustomIndividualServiceNoteObjectivesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomIndividualServiceNoteObjectivesRow);
                return rowCustomIndividualServiceNoteObjectivesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteObjectivesRow FindByIndividualServiceNoteObjectiveId(int IndividualServiceNoteObjectiveId) {
                return ((CustomIndividualServiceNoteObjectivesRow)(this.Rows.Find(new object[] {
                            IndividualServiceNoteObjectiveId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomIndividualServiceNoteObjectivesDataTable cln = ((CustomIndividualServiceNoteObjectivesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomIndividualServiceNoteObjectivesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndividualServiceNoteObjectiveId = base.Columns["IndividualServiceNoteObjectiveId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnGoalId = base.Columns["GoalId"];
                this.columnObjectiveNumber = base.Columns["ObjectiveNumber"];
                this.columnCustomObjectiveActive = base.Columns["CustomObjectiveActive"];
                this.columnStatus = base.Columns["Status"];
                this.columnObjectiveText = base.Columns["ObjectiveText"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndividualServiceNoteObjectiveId = new global::System.Data.DataColumn("IndividualServiceNoteObjectiveId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndividualServiceNoteObjectiveId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnGoalId = new global::System.Data.DataColumn("GoalId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoalId);
                this.columnObjectiveNumber = new global::System.Data.DataColumn("ObjectiveNumber", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectiveNumber);
                this.columnCustomObjectiveActive = new global::System.Data.DataColumn("CustomObjectiveActive", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomObjectiveActive);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnObjectiveText = new global::System.Data.DataColumn("ObjectiveText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectiveText);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIndividualServiceNoteObjectiveId}, true));
                this.columnIndividualServiceNoteObjectiveId.AutoIncrement = true;
                this.columnIndividualServiceNoteObjectiveId.AutoIncrementSeed = -1;
                this.columnIndividualServiceNoteObjectiveId.AutoIncrementStep = -1;
                this.columnIndividualServiceNoteObjectiveId.AllowDBNull = false;
                this.columnIndividualServiceNoteObjectiveId.ReadOnly = true;
                this.columnIndividualServiceNoteObjectiveId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnCustomObjectiveActive.MaxLength = 1;
                this.columnObjectiveText.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteObjectivesRow NewCustomIndividualServiceNoteObjectivesRow() {
                return ((CustomIndividualServiceNoteObjectivesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomIndividualServiceNoteObjectivesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomIndividualServiceNoteObjectivesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomIndividualServiceNoteObjectivesRowChanged != null)) {
                    this.CustomIndividualServiceNoteObjectivesRowChanged(this, new CustomIndividualServiceNoteObjectivesRowChangeEvent(((CustomIndividualServiceNoteObjectivesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomIndividualServiceNoteObjectivesRowChanging != null)) {
                    this.CustomIndividualServiceNoteObjectivesRowChanging(this, new CustomIndividualServiceNoteObjectivesRowChangeEvent(((CustomIndividualServiceNoteObjectivesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomIndividualServiceNoteObjectivesRowDeleted != null)) {
                    this.CustomIndividualServiceNoteObjectivesRowDeleted(this, new CustomIndividualServiceNoteObjectivesRowChangeEvent(((CustomIndividualServiceNoteObjectivesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomIndividualServiceNoteObjectivesRowDeleting != null)) {
                    this.CustomIndividualServiceNoteObjectivesRowDeleting(this, new CustomIndividualServiceNoteObjectivesRowChangeEvent(((CustomIndividualServiceNoteObjectivesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomIndividualServiceNoteObjectivesRow(CustomIndividualServiceNoteObjectivesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCustomIServiceNote ds = new DataSetCustomIServiceNote();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomIndividualServiceNoteObjectivesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDocumentIndividualServiceNotesRow : global::System.Data.DataRow {
            
            private CustomDocumentIndividualServiceNotesDataTable tableCustomDocumentIndividualServiceNotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentIndividualServiceNotesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDocumentIndividualServiceNotes = ((CustomDocumentIndividualServiceNotesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    return ((int)(this[this.tableCustomDocumentIndividualServiceNotes.DocumentVersionIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentIndividualServiceNotes.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentIndividualServiceNotes.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentIndividualServiceNotes.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentIndividualServiceNotes.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNotes.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDocumentIndividualServiceNot" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNotes.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDocumentIndividualServiceNotes\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentIndividualServiceNotes.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDocumentIndividualServiceNotes" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShowSelectedItems {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNotes.ShowSelectedItemsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShowSelectedItems\' in table \'CustomDocumentIndividualServic" +
                                "eNotes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.ShowSelectedItemsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoalsOutcomesStrategies {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNotes.GoalsOutcomesStrategiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoalsOutcomesStrategies\' in table \'CustomDocumentIndividual" +
                                "ServiceNotes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.GoalsOutcomesStrategiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NameOfService {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNotes.NameOfServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NameOfService\' in table \'CustomDocumentIndividualServiceNot" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.NameOfServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ServiceEvent {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNotes.ServiceEventColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceEvent\' in table \'CustomDocumentIndividualServiceNote" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.ServiceEventColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PertinentEvent {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNotes.PertinentEventColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PertinentEvent\' in table \'CustomDocumentIndividualServiceNo" +
                                "tes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.PertinentEventColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Progress {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNotes.ProgressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Progress\' in table \'CustomDocumentIndividualServiceNotes\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.ProgressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LackOfProgress {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNotes.LackOfProgressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LackOfProgress\' in table \'CustomDocumentIndividualServiceNo" +
                                "tes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.LackOfProgressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProgressComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNotes.ProgressCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgressComments\' in table \'CustomDocumentIndividualService" +
                                "Notes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.ProgressCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FollowUpNeeded {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNotes.FollowUpNeededColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FollowUpNeeded\' in table \'CustomDocumentIndividualServiceNo" +
                                "tes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNotes.FollowUpNeededColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNotes.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDocumentIndividualServiceNotes.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNotes.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDocumentIndividualServiceNotes.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNotes.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDocumentIndividualServiceNotes.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShowSelectedItemsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNotes.ShowSelectedItemsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShowSelectedItemsNull() {
                this[this.tableCustomDocumentIndividualServiceNotes.ShowSelectedItemsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoalsOutcomesStrategiesNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNotes.GoalsOutcomesStrategiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoalsOutcomesStrategiesNull() {
                this[this.tableCustomDocumentIndividualServiceNotes.GoalsOutcomesStrategiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameOfServiceNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNotes.NameOfServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameOfServiceNull() {
                this[this.tableCustomDocumentIndividualServiceNotes.NameOfServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceEventNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNotes.ServiceEventColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceEventNull() {
                this[this.tableCustomDocumentIndividualServiceNotes.ServiceEventColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPertinentEventNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNotes.PertinentEventColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPertinentEventNull() {
                this[this.tableCustomDocumentIndividualServiceNotes.PertinentEventColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProgressNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNotes.ProgressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProgressNull() {
                this[this.tableCustomDocumentIndividualServiceNotes.ProgressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLackOfProgressNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNotes.LackOfProgressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLackOfProgressNull() {
                this[this.tableCustomDocumentIndividualServiceNotes.LackOfProgressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProgressCommentsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNotes.ProgressCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProgressCommentsNull() {
                this[this.tableCustomDocumentIndividualServiceNotes.ProgressCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFollowUpNeededNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNotes.FollowUpNeededColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFollowUpNeededNull() {
                this[this.tableCustomDocumentIndividualServiceNotes.FollowUpNeededColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomIndividualServiceNoteGoalsRow : global::System.Data.DataRow {
            
            private CustomIndividualServiceNoteGoalsDataTable tableCustomIndividualServiceNoteGoals;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomIndividualServiceNoteGoalsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomIndividualServiceNoteGoals = ((CustomIndividualServiceNoteGoalsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndividualServiceNoteGoalId {
                get {
                    return ((int)(this[this.tableCustomIndividualServiceNoteGoals.IndividualServiceNoteGoalIdColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.IndividualServiceNoteGoalIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomIndividualServiceNoteGoals.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomIndividualServiceNoteGoals.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomIndividualServiceNoteGoals.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomIndividualServiceNoteGoals.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteGoals.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomIndividualServiceNoteGoals\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteGoals.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomIndividualServiceNoteGoals\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomIndividualServiceNoteGoals.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomIndividualServiceNoteGoals\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    try {
                        return ((int)(this[this.tableCustomIndividualServiceNoteGoals.DocumentVersionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentVersionId\' in table \'CustomIndividualServiceNoteGoa" +
                                "ls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoalId {
                get {
                    try {
                        return ((int)(this[this.tableCustomIndividualServiceNoteGoals.GoalIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoalId\' in table \'CustomIndividualServiceNoteGoals\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.GoalIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GoalNumber {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomIndividualServiceNoteGoals.GoalNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoalNumber\' in table \'CustomIndividualServiceNoteGoals\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.GoalNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoalText {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteGoals.GoalTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoalText\' in table \'CustomIndividualServiceNoteGoals\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.GoalTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomGoalActive {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteGoals.CustomGoalActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomGoalActive\' in table \'CustomIndividualServiceNoteGoal" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.CustomGoalActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteGoals.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomIndividualServiceNoteGoals.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteGoals.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomIndividualServiceNoteGoals.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteGoals.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomIndividualServiceNoteGoals.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentVersionIdNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteGoals.DocumentVersionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentVersionIdNull() {
                this[this.tableCustomIndividualServiceNoteGoals.DocumentVersionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoalIdNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteGoals.GoalIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoalIdNull() {
                this[this.tableCustomIndividualServiceNoteGoals.GoalIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoalNumberNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteGoals.GoalNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoalNumberNull() {
                this[this.tableCustomIndividualServiceNoteGoals.GoalNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoalTextNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteGoals.GoalTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoalTextNull() {
                this[this.tableCustomIndividualServiceNoteGoals.GoalTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomGoalActiveNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteGoals.CustomGoalActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomGoalActiveNull() {
                this[this.tableCustomIndividualServiceNoteGoals.CustomGoalActiveColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomIndividualServiceNoteObjectivesRow : global::System.Data.DataRow {
            
            private CustomIndividualServiceNoteObjectivesDataTable tableCustomIndividualServiceNoteObjectives;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomIndividualServiceNoteObjectivesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomIndividualServiceNoteObjectives = ((CustomIndividualServiceNoteObjectivesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndividualServiceNoteObjectiveId {
                get {
                    return ((int)(this[this.tableCustomIndividualServiceNoteObjectives.IndividualServiceNoteObjectiveIdColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.IndividualServiceNoteObjectiveIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomIndividualServiceNoteObjectives.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomIndividualServiceNoteObjectives.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomIndividualServiceNoteObjectives.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomIndividualServiceNoteObjectives.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteObjectives.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomIndividualServiceNoteObjecti" +
                                "ves\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteObjectives.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomIndividualServiceNoteObjectives\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomIndividualServiceNoteObjectives.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomIndividualServiceNoteObjective" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    try {
                        return ((int)(this[this.tableCustomIndividualServiceNoteObjectives.DocumentVersionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentVersionId\' in table \'CustomIndividualServiceNoteObj" +
                                "ectives\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoalId {
                get {
                    try {
                        return ((int)(this[this.tableCustomIndividualServiceNoteObjectives.GoalIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoalId\' in table \'CustomIndividualServiceNoteObjectives\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.GoalIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ObjectiveNumber {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomIndividualServiceNoteObjectives.ObjectiveNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectiveNumber\' in table \'CustomIndividualServiceNoteObjec" +
                                "tives\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.ObjectiveNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomObjectiveActive {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteObjectives.CustomObjectiveActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomObjectiveActive\' in table \'CustomIndividualServiceNot" +
                                "eObjectives\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.CustomObjectiveActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Status {
                get {
                    try {
                        return ((int)(this[this.tableCustomIndividualServiceNoteObjectives.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'CustomIndividualServiceNoteObjectives\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ObjectiveText {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteObjectives.ObjectiveTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectiveText\' in table \'CustomIndividualServiceNoteObjecti" +
                                "ves\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.ObjectiveTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentVersionIdNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.DocumentVersionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentVersionIdNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.DocumentVersionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoalIdNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.GoalIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoalIdNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.GoalIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectiveNumberNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.ObjectiveNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectiveNumberNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.ObjectiveNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomObjectiveActiveNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.CustomObjectiveActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomObjectiveActiveNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.CustomObjectiveActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectiveTextNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.ObjectiveTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectiveTextNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.ObjectiveTextColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDocumentIndividualServiceNotesRowChangeEvent : global::System.EventArgs {
            
            private CustomDocumentIndividualServiceNotesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentIndividualServiceNotesRowChangeEvent(CustomDocumentIndividualServiceNotesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentIndividualServiceNotesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomIndividualServiceNoteGoalsRowChangeEvent : global::System.EventArgs {
            
            private CustomIndividualServiceNoteGoalsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteGoalsRowChangeEvent(CustomIndividualServiceNoteGoalsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteGoalsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomIndividualServiceNoteObjectivesRowChangeEvent : global::System.EventArgs {
            
            private CustomIndividualServiceNoteObjectivesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteObjectivesRowChangeEvent(CustomIndividualServiceNoteObjectivesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteObjectivesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591